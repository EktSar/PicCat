{"version":3,"sources":["redux/authReducer.js","unsplash.js","api/api.js","redux/photoReducer.js","redux/store.js","serviceWorker.js","auth.js","components/common/Preloader/Preloader.jsx","components/Header/Header.jsx","components/common/Username/Username.jsx","functions.js","components/ModalPhoto/ModalPhoto.jsx","components/Photo/Photo.jsx","components/Photos.jsx","App.js","index.js","components/common/Preloader/Preloader.module.css","components/common/Username/Username.module.css","assets/img/logo.png"],"names":["SET_TOKEN","initialState","token","authReducer","state","action","type","unsplash","Unsplash","accessKey","secret","callbackUrl","clientId","instance","axios","baseURL","photosAPI","length","count","get","then","res","data","photoId","photos","likePhoto","status","error","json","unlikePhoto","SET_PHOTOS","SET_PHOTO","TOGGLE_IS_LOADING","LIKE_UNLIKE","photosOnPageCount","isLoading","likingInProgress","photoById","toggleIsLoading","toggleLikingProgress","likeUnlike","liked_by_user","likes","photoReducer","photo","filter","id","map","reducers","combineReducers","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Boolean","location","hostname","match","setTokenEverywhere","code","setToken","a","userAuthentication","access_token","console","log","setBearerToken","localStorage","setItem","JSON","stringify","isCenter","color","className","classes","wrapperCenter","Spinner","animation","variant","spinner","wrapper","src","logo","alt","username","link","profileImage","href","target","rel","getDate","fullDate","arrDate","substring","split","history","getPhoto","useState","ready","setReady","show","setShow","setPhotoId","useEffect","pathname","handleShow","Modal","onHide","push","size","Header","closeButton","Title","Username","user","profile_image","medium","links","html","Body","urls","regular","Footer","created_at","disabled","some","onClick","width","height","viewBox","fill","xmlns","d","fillRule","Preloader","url","date","likedByUser","to","style","margin","props","dataLength","next","getPhotos","hasMore","loader","key","withRouter","connect","photosCount","dispatch","latestProps","useRef","current","getAuthentication","useCallback","parse","getItem","authenticationUrl","getAuthenticationUrl","assign","search","path","exact","Photos","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.6da16a8e.chunk.js","sourcesContent":["// Actions\r\nconst SET_TOKEN = 'skillbox-piccat/auth/SET_TOKEN';\r\n\r\nlet initialState = {\r\n  token: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Action Creators\r\nexport const setToken = (token) => {\r\n  return {type: SET_TOKEN, token}\r\n}\r\n\r\nexport default authReducer;","import Unsplash from 'unsplash-js';\r\n\r\n// Создаем экземпляр объекта для доступа к API\r\nexport const unsplash = new Unsplash({\r\n  accessKey: \"eENzyfZ0gldbhV8fUtpQ1es2bwppeIGAn2acq4IAFac\",\r\n  secret: \"_3qK4clJYpmN7YHn2i_PBykP3YNKm_qWQG5rFCBJEbI\",\r\n  callbackUrl: \"http://localhost:3000/auth\" // Полный адрес страницы авторизации приложения (Redirect URI)\r\n\r\n  // accessKey: \"b-6eQP7VT2lxVBqAMab-oqO01vE-hTK1jl75oYLZDOg\",\r\n  // secret: \"vcdbOBQICU_d8LWZEHWUnYXbNRgO4mweLrdUHtnZvVk\",\r\n  // callbackUrl: \"http://localhost:3000/auth\"\r\n});\r\n","import * as axios from \"axios\";\r\nimport {unsplash} from \"../unsplash\";\r\n\r\n//const clientId = 'eENzyfZ0gldbhV8fUtpQ1es2bwppeIGAn2acq4IAFac';\r\nconst clientId = 'b-6eQP7VT2lxVBqAMab-oqO01vE-hTK1jl75oYLZDOg';\r\n\r\n// Конкретный экземпляр axios, для настройки работы с одним api\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.unsplash.com/\",\r\n});\r\n\r\nexport const photosAPI = {\r\n  getRandomPhotos(length, count = 10,) {\r\n    //const page = (length * 2) / count;\r\n\r\n    return instance.get(`/photos/random?client_id=${clientId}&count=${count}`).then(res => {\r\n    // return instance.get(`/photos?client_id=${clientId}&page=${page}&per_page=${count}`).then(res => {\r\n      return res.data\r\n    });\r\n  },\r\n\r\n  getPhotoById(photoId) {\r\n    return instance.get(`/photos/${photoId}?client_id=${clientId}`).then(res => res.data);\r\n  },\r\n\r\n  likePhoto(photoId) {\r\n    return unsplash.photos.likePhoto(`${photoId}`).then(res => {\r\n      if (res.status !== 201) {\r\n        return {error: 'Возникла ошибка!'};\r\n      }\r\n      return res.json();\r\n    })\r\n    // return instance.post(`/photos/${photoId}/like`).then(res => res.data);\r\n  },\r\n\r\n  unlikePhoto(photoId) {\r\n    return unsplash.photos.unlikePhoto(`${photoId}`).then(res => {\r\n      if (res.status !== 200) {\r\n        return {error: 'Возникла ошибка!'};\r\n      }\r\n      return res.json();\r\n    })\r\n    //return instance.delete(`/photos/${photoId}/like`).then(res => res.data);\r\n  },\r\n}\r\n","import {photosAPI} from \"../api/api\";\r\n\r\nconst SET_PHOTOS = 'skillbox-piccat/photo/SET_PHOTOS';\r\nconst SET_PHOTO = 'skillbox-piccat/photo/SET_PHOTO';\r\nconst TOGGLE_IS_LOADING = 'skillbox-piccat/photo/TOGGLE_IS_LOADING';\r\nconst TOGGLE_IS_LIKING_PROGRESS = 'skillbox-piccat/photo/TOGGLE_IS_LIKING_PROGRESS';\r\nconst LIKE_UNLIKE = 'skillbox-piccat/photo/LIKE_UNLIKE';\r\n\r\nlet initialState = {\r\n  photos: [],\r\n  photosOnPageCount: 10,\r\n  isLoading: true,\r\n  likingInProgress: [], // Массив тех id, которые в процессе liking\r\n  photoById: null,\r\n}\r\n\r\nconst photoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PHOTOS:\r\n      return {...state, photos: [...state.photos, ...action.photos]}\r\n\r\n    case SET_PHOTO:\r\n      return {...state, photoById: action.photo}\r\n\r\n    case TOGGLE_IS_LOADING:\r\n      return {...state, isLoading: action.isLoading}\r\n\r\n    case TOGGLE_IS_LIKING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        likingInProgress: action.isLoading\r\n          ? [...state.likingInProgress, action.photoId] // Дописываем в массив id того фото, которое обрабатывается сервером\r\n          : state.likingInProgress.filter(id => id !== action.photoId) // Фильтрация вернет новый массив, без того id, чей лайк поставлен\r\n      }\r\n\r\n    case LIKE_UNLIKE:\r\n      return {\r\n        ...state,\r\n\r\n        photos: state.photos.map(photo => {\r\n          if (photo.id === action.photoId) {\r\n            return {...photo, liked_by_user: action.liked_by_user, likes: action.likes}\r\n          }\r\n          return photo;\r\n        }),\r\n        photoById: {...state.photoById, liked_by_user: action.liked_by_user, likes: action.likes}\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Action Creators\r\nexport const setPhotos = (photos) => ({type: SET_PHOTOS, photos})\r\nexport const setPhoto = (photo) => ({type: SET_PHOTO, photo})\r\nexport const toggleIsLoading = (isLoading) => ({type: TOGGLE_IS_LOADING, isLoading})\r\nexport const toggleLikingProgress = (isLoading, photoId) => ({\r\n  type: TOGGLE_IS_LIKING_PROGRESS, isLoading, photoId\r\n})\r\nexport const likeUnlike = (photoId, liked_by_user, likes) => ({type: LIKE_UNLIKE, photoId, liked_by_user, likes})\r\n\r\n// Thunk Creators\r\nexport const getPhotos = (length, photosCount) => (dispatch) => {\r\n  // Когда идет запрос на сервер\r\n  dispatch(toggleIsLoading(true));\r\n\r\n  // Запрос на сервер\r\n  photosAPI.getRandomPhotos(length, photosCount).then(data => {\r\n    dispatch(toggleIsLoading(false)); // Когда пришел ответ от сервера\r\n    dispatch(setPhotos(data));\r\n  })\r\n}\r\n\r\nexport const getPhoto = (id) => (dispatch) => {\r\n  dispatch(toggleIsLoading(true));\r\n\r\n  photosAPI.getPhotoById(id).then(data => {\r\n    dispatch(toggleIsLoading(false));\r\n    dispatch(setPhoto(data));\r\n  })\r\n}\r\n\r\nexport const likePhoto = (photoId) => (dispatch) => {\r\n  dispatch(toggleLikingProgress(true, photoId));\r\n\r\n  photosAPI.likePhoto(photoId).then(res => {\r\n    if (!res.error && res.photo.id) {\r\n      dispatch(likeUnlike(res.photo.id, res.photo.liked_by_user, res.photo.likes))\r\n    }\r\n    dispatch(toggleLikingProgress(false, photoId));\r\n  })\r\n}\r\n\r\nexport const unlikePhoto = (photoId) => (dispatch) => {\r\n  // disabled кнопку, чтобы предотвратить последующий запрос до завершения текущего\r\n  dispatch(toggleLikingProgress(true, photoId));\r\n\r\n  photosAPI.unlikePhoto(photoId).then(res => {\r\n    if (!res.error && res.photo.id) {\r\n      dispatch(likeUnlike(res.photo.id, res.photo.liked_by_user, res.photo.likes))\r\n    }\r\n    dispatch(toggleLikingProgress(false, photoId));\r\n  })\r\n}\r\n\r\nexport default photoReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport authReducer from \"./authReducer\";\r\nimport photoReducer from \"./photoReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  auth: authReducer,\r\n  photo: photoReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {unsplash} from \"./unsplash\";\r\n\r\nexport const setTokenEverywhere = async (code, setToken) => {\r\n  // Возвращается Promise\r\n  return await unsplash.auth.userAuthentication(code)\r\n    .then(res => {\r\n      if (res.status === 403) {\r\n        return {error: 'Rate Limit Exceeded'};\r\n      }\r\n      return res.json();\r\n    })\r\n    .then(json => {\r\n      // Сохраняем полученный токен\r\n      const token = json.access_token;\r\n\r\n      console.log(json);\r\n\r\n      // Если токен пришел с сервера\r\n      if (token) {\r\n        unsplash.auth.setBearerToken(token);\r\n        localStorage.setItem('userData', JSON.stringify({token})); // Данные сохраняются в локальное хранилище браузера\r\n        setToken(token);\r\n        return token;\r\n      }\r\n\r\n      return null;\r\n      // Теперь можно сделать что-то от имени пользователя\r\n      // Например, поставить лайк фотографии\r\n      //unsplash.photos.likePhoto(\"kBJEJqWNtNY\");\r\n    });\r\n}\r\n\r\nexport const getAuthenticationUrl = () => {\r\n  // Генерируем адрес страницы аутентификации на unsplash.com и указываем требуемые разрешения (permissions)\r\n  const authenticationUrl = unsplash.auth.getAuthenticationUrl([\r\n    \"public\",\r\n    \"write_likes\"\r\n  ]);\r\n\r\n  // Отправляем пользователя по этому адресу\r\n  window.location.assign(authenticationUrl);\r\n}","import React from 'react';\r\nimport {Spinner} from \"react-bootstrap\";\r\nimport classes from \"./Preloader.module.css\";\r\n\r\nexport default ({isCenter = true, color = \"dark\"}) => {\r\n  return <>\r\n    {isCenter\r\n      ? <div className={classes.wrapperCenter}>\r\n        <Spinner animation=\"border\" variant={color} className={classes.spinner}>\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n\r\n      : <div className={classes.wrapper}>\r\n        <Spinner animation=\"border\" variant={color} className={classes.spinner}>\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    }\r\n  </>\r\n}","import React from \"react\";\r\nimport logo from \"../../assets/img/logo.png\"\r\n\r\nexport default () => {\r\n  return (\r\n    <header>\r\n      <img src={logo} alt=\"Лого\" className=\"logo\"/>\r\n      <span>PicCat</span>\r\n    </header>\r\n  )\r\n}","import React from \"react\";\r\nimport classes from \"./Username.module.css\";\r\n\r\nexport default ({username, link, profileImage}) => {\r\n  return (\r\n    <div className={classes.username}>\r\n      <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <img src={profileImage} alt=\"Аватар\" className={classes.profileImage} />\r\n      </a>\r\n      <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {username}\r\n      </a>\r\n    </div>\r\n  )\r\n}","export function getDate(fullDate) {\r\n  const arrDate = fullDate.substring(0, 10).split('-');\r\n  return `${arrDate[2]}.${arrDate[1]}.${arrDate[0]}`\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Modal} from \"react-bootstrap\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Username from \"../common/Username/Username\";\r\nimport {getDate} from \"../../functions\";\r\nimport \"./ModalPhoto.css\";\r\n\r\nexport default ({photo, location, likePhoto, unlikePhoto, likingInProgress, history, getPhoto}) => {\r\n  const [ready, setReady] = useState(false);\r\n  const [show, setShow] = useState(true);\r\n  const [photoId, setPhotoId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setPhotoId(location.pathname.split('photos/')[1]);\r\n\r\n    // Если фотографии еще не установлена\r\n    if (photoId && (!photo || photo.id !== photoId)) {\r\n      getPhoto(photoId);\r\n    }\r\n\r\n    if (photo && photo.id === photoId) {\r\n      setReady(true);\r\n      handleShow();\r\n    }\r\n\r\n  }, [photoId, photo, getPhoto, location])\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    history.push('/')\r\n  }\r\n  const handleShow = () => setShow(true);\r\n\r\n  if (!ready) {\r\n    return <Preloader color=\"success\"/>\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} size=\"lg\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          <Username profileImage={photo.user.profile_image.medium} username={photo.user.username}\r\n                    link={photo.user.links.html}/>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <img src={photo.urls.regular} alt=\"Фото\" className=\"modal-photo\"/>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <span>{getDate(photo.created_at)}</span>\r\n\r\n        <div className=\"likes-wrapper\">\r\n          <span className=\"likes\">{photo.likes}</span>\r\n\r\n          {photo.liked_by_user\r\n            ? <button className=\"btn-like\" disabled={likingInProgress.some(id => id === photoId)}\r\n                      onClick={() => unlikePhoto(photoId)}>\r\n              <svg width=\"1.45rem\" height=\"1.45rem\" viewBox=\"0 0 16 16\" className=\"bi bi-suit-heart-fill like-fill\"\r\n                   fill=\"currentColor\"\r\n                   xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M4 1c2.21 0 4 1.755 4 3.92C8 2.755 9.79 1 12 1s4 1.755 4 3.92c0 3.263-3.234 4.414-7.608 9.608a.513.513 0 0 1-.784 0C3.234 9.334 0 8.183 0 4.92 0 2.755 1.79 1 4 1z\"/>\r\n              </svg>\r\n            </button>\r\n\r\n            : <button className=\"btn-like\" disabled={likingInProgress.some(id => id === photoId)}\r\n                      onClick={() => likePhoto(photoId)}>\r\n              <svg width=\"1.45rem\" height=\"1.45rem\" viewBox=\"0 0 16 16\" className=\"bi bi-suit-heart like\"\r\n                   fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\"\r\n                      d=\"M8 6.236l.894-1.789c.222-.443.607-1.08 1.152-1.595C10.582 2.345 11.224 2 12 2c1.676 0 3 1.326 3 2.92 0 1.211-.554 2.066-1.868 3.37-.337.334-.721.695-1.146 1.093C10.878 10.423 9.5 11.717 8 13.447c-1.5-1.73-2.878-3.024-3.986-4.064-.425-.398-.81-.76-1.146-1.093C1.554 6.986 1 6.131 1 4.92 1 3.326 2.324 2 4 2c.776 0 1.418.345 1.954.852.545.515.93 1.152 1.152 1.595L8 6.236zm.392 8.292a.513.513 0 0 1-.784 0c-1.601-1.902-3.05-3.262-4.243-4.381C1.3 8.208 0 6.989 0 4.92 0 2.755 1.79 1 4 1c1.6 0 2.719 1.05 3.404 2.008.26.365.458.716.596.992a7.55 7.55 0 0 1 .596-.992C9.281 2.049 10.4 1 12 1c2.21 0 4 1.755 4 3.92 0 2.069-1.3 3.288-3.365 5.227-1.193 1.12-2.642 2.48-4.243 4.38z\"/>\r\n              </svg>\r\n            </button>\r\n          }\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Username from \"../common/Username/Username\";\r\nimport {getDate} from \"../../functions\";\r\nimport \"./Photo.css\";\r\n\r\nexport default ({photoId, url, date, likes, likedByUser, user, likePhoto, unlikePhoto, likingInProgress}) => {\r\n  return (\r\n    <div className=\"photo-card\">\r\n      <div className=\"photo-header\">\r\n        <span>{getDate(date)}</span>\r\n\r\n        <div className=\"likes-wrapper\">\r\n          <span className=\"likes\">{likes}</span>\r\n\r\n          {likedByUser\r\n            ? <button className=\"btn-like\" disabled={likingInProgress.some(id => id === photoId)}\r\n                      onClick={() => unlikePhoto(photoId)}>\r\n              <svg width=\"1.45rem\" height=\"1.45rem\" viewBox=\"0 0 16 16\" className=\"bi bi-suit-heart-fill like-fill\"\r\n                   fill=\"currentColor\"\r\n                   xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M4 1c2.21 0 4 1.755 4 3.92C8 2.755 9.79 1 12 1s4 1.755 4 3.92c0 3.263-3.234 4.414-7.608 9.608a.513.513 0 0 1-.784 0C3.234 9.334 0 8.183 0 4.92 0 2.755 1.79 1 4 1z\"/>\r\n              </svg>\r\n            </button>\r\n\r\n            : <button className=\"btn-like\" disabled={likingInProgress.some(id => id === photoId)}\r\n                      onClick={() => likePhoto(photoId)}>\r\n              <svg width=\"1.45rem\" height=\"1.45rem\" viewBox=\"0 0 16 16\" className=\"bi bi-suit-heart like\"\r\n                   fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\"\r\n                      d=\"M8 6.236l.894-1.789c.222-.443.607-1.08 1.152-1.595C10.582 2.345 11.224 2 12 2c1.676 0 3 1.326 3 2.92 0 1.211-.554 2.066-1.868 3.37-.337.334-.721.695-1.146 1.093C10.878 10.423 9.5 11.717 8 13.447c-1.5-1.73-2.878-3.024-3.986-4.064-.425-.398-.81-.76-1.146-1.093C1.554 6.986 1 6.131 1 4.92 1 3.326 2.324 2 4 2c.776 0 1.418.345 1.954.852.545.515.93 1.152 1.152 1.595L8 6.236zm.392 8.292a.513.513 0 0 1-.784 0c-1.601-1.902-3.05-3.262-4.243-4.381C1.3 8.208 0 6.989 0 4.92 0 2.755 1.79 1 4 1c1.6 0 2.719 1.05 3.404 2.008.26.365.458.716.596.992a7.55 7.55 0 0 1 .596-.992C9.281 2.049 10.4 1 12 1c2.21 0 4 1.755 4 3.92 0 2.069-1.3 3.288-3.365 5.227-1.193 1.12-2.642 2.48-4.243 4.38z\"/>\r\n              </svg>\r\n            </button>\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <NavLink to={`/photos/${photoId}`}>\r\n        <img src={url} alt=\"Фото\" className=\"photo\"/>\r\n      </NavLink>\r\n\r\n      <div style={{margin: \".8rem\"}}>\r\n        <Username profileImage={user.profile_image.medium} username={user.username} link={user.links.html} />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\nimport Photo from \"./Photo/Photo\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nexport default (props) => {\r\n  const fetchPhotos = () => {\r\n    props.getPhotos(props.photo.photos.length)\r\n  }\r\n\r\n  return <main>\r\n    <h1>PicCat - фото на любой вкус</h1>\r\n\r\n    <InfiniteScroll\r\n      dataLength={props.photo.photos.length}\r\n      next={fetchPhotos}\r\n      hasMore={true}\r\n      loader={<Preloader isCenter={false}/>}\r\n    >\r\n      <div className=\"masonry-container\">\r\n        {props.photo.photos.map(photo => (\r\n          <Photo url={photo.urls.regular} key={photo.id} photoId={photo.id} user={photo.user} date={photo.created_at}\r\n                 likes={photo.likes} likedByUser={photo.liked_by_user}\r\n                 likePhoto={props.likePhoto} unlikePhoto={props.unlikePhoto}\r\n                 likingInProgress={props.photo.likingInProgress}/>\r\n        ))}\r\n      </div>\r\n    </InfiniteScroll>\r\n  </main>\r\n}","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {setToken} from \"./redux/authReducer\";\nimport {compose} from \"redux\";\nimport {getAuthenticationUrl, setTokenEverywhere} from \"./auth\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {getPhoto, getPhotos, likePhoto, unlikePhoto} from \"./redux/photoReducer\";\nimport Header from \"./components/Header/Header\";\nimport ModalPhoto from \"./components/ModalPhoto/ModalPhoto\";\nimport Photos from \"./components/Photos\";\nimport {unsplash} from \"./unsplash\";\nimport './App.css';\n\nfunction App(props) {\n  const [ready, setReady] = useState(false);\n\n  const latestProps = useRef(props);\n  useEffect(() => {\n    latestProps.current = props;\n  });\n\n  const getAuthentication = useCallback(() => {\n    const data = JSON.parse(localStorage.getItem('userData'));\n\n    // Если токен есть в localStorage\n    if (data && data.token) {\n      unsplash.auth.setBearerToken(data.token);\n      latestProps.current.setToken(data.token);\n      setReady(true);\n    } else {\n      // Авторизация через unsplash\n      getAuthenticationUrl();\n    }\n  }, []);\n\n  // При загрузке проверка хуком локального хранилища, запись в локальное состояние\n  useEffect(() => {\n    // Считываем GET-параметр code из URL\n    const code = latestProps.current.location.search.split('code=')[1];\n\n    // Если код передан, отправляем запрос на получение токена\n    if (code) {\n      setTokenEverywhere(code, latestProps.current.setToken).then(token => {\n        // Если токен был получен\n        if (token) {\n          setReady(true);\n        } else {\n          // Если произошла ошибка в получении токена\n          getAuthentication();\n        }\n      });\n    } else {\n      getAuthentication();\n    }\n\n    latestProps.current.getPhotos(0);\n  }, [getAuthentication]);\n\n  if (!ready) {\n    return <Preloader/>\n  }\n\n  return (\n    <div className=\"container\">\n      <Header/>\n\n      <Switch>\n        <Route path=\"/photos/:photoId\" exact>\n          <Photos {...props} />\n          <ModalPhoto location={props.location} history={props.history}\n                      likePhoto={props.likePhoto} unlikePhoto={props.unlikePhoto}\n                      likingInProgress={props.photo.likingInProgress}\n                      photo={props.photo.photoById} getPhoto={props.getPhoto}/>\n        </Route>\n\n        <Route path=\"/\" exact>\n          <Photos {...props} />\n        </Route>\n\n        <Redirect to=\"/\" />\n      </Switch>\n\n      {/*<Footer />*/}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  photo: state.photo,\n})\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {setToken, getPhotos, likePhoto, unlikePhoto, getPhoto}))\n(App);\n","import React from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperCenter\":\"Preloader_wrapperCenter__1-8U_\",\"wrapper\":\"Preloader_wrapper__2l7_S\",\"spinner\":\"Preloader_spinner__3ke5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"username\":\"Username_username__3Mqf7\",\"profileImage\":\"Username_profileImage__2Vtnu\"};","module.exports = __webpack_public_path__ + \"static/media/logo.47ab8fcf.png\";"],"sourceRoot":""}